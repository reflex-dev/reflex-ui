"""Stub file for reflex_ui/components/base/link.py"""
# ------------------- DO NOT EDIT ----------------------
# This file was generated by `reflex/utils/pyi_generator.py`!
# ------------------------------------------------------
from typing import Annotated, Any, Callable, Dict, Literal, Mapping, Optional, Sequence, Union
from reflex.components.core.breakpoints import Breakpoints
from reflex.event import EventChain, EventHandler, EventSpec, EventType, KeyInputInfo, PointerEventInfo
from reflex.style import Style
from reflex.vars.base import Var
import reflex
from typing import Literal
from reflex.components.react_router.dom import ReactRouterLink, To
from reflex.vars.base import Var
from reflex_ui.components.icons.hugeicon import hi
from reflex_ui.utils.twmerge import cn
LiteralLinkVariant = Literal['primary', 'secondary']
LiteralLinkSize = Literal['xs', 'sm', 'md', 'lg', 'xl']

class ClassNames:
    ROOT = 'font-medium underline-offset-2 hover:underline w-fit group/link relative'
    ICON = 'absolute top-1/2 -translate-y-1/2 right-[-1.25rem] group-hover/link:opacity-100 text-secondary-9 opacity-0'
LINK_VARIANTS: dict[str, dict[str, str]]

class Link(ReactRouterLink):

    @classmethod
    def create(cls, *children, size: Literal['lg', 'md', 'sm', 'xl', 'xs'] | Var[Literal['lg', 'md', 'sm', 'xl', 'xs']] | None=None, variant: Literal['primary', 'secondary'] | Var[Literal['primary', 'secondary']] | None=None, show_icon: Var[bool] | bool | None=None, to: To | Var[To | str] | str | None=None, replace: Var[bool] | bool | None=None, reload_document: Var[bool] | bool | None=None, prevent_scroll_reset: Var[bool] | bool | None=None, discover: Literal['none', 'render'] | Var[Literal['none', 'render']] | None=None, view_transition: Var[bool] | bool | None=None, download: Var[bool | str] | bool | str | None=None, href: Var[str] | str | None=None, href_lang: Var[str] | str | None=None, media: Var[str] | str | None=None, ping: Var[str] | str | None=None, referrer_policy: Literal['', 'no-referrer', 'no-referrer-when-downgrade', 'origin', 'origin-when-cross-origin', 'same-origin', 'strict-origin', 'strict-origin-when-cross-origin', 'unsafe-url'] | Var[Literal['', 'no-referrer', 'no-referrer-when-downgrade', 'origin', 'origin-when-cross-origin', 'same-origin', 'strict-origin', 'strict-origin-when-cross-origin', 'unsafe-url']] | None=None, rel: Var[str] | str | None=None, target: Literal['_blank', '_parent', '_self', '_top'] | Var[Literal['_blank', '_parent', '_self', '_top'] | str] | str | None=None, access_key: Var[str] | str | None=None, auto_capitalize: Literal['characters', 'none', 'off', 'on', 'sentences', 'words'] | Var[Literal['characters', 'none', 'off', 'on', 'sentences', 'words']] | None=None, content_editable: Literal['inherit', 'plaintext-only', False, True] | Var[Literal['inherit', 'plaintext-only', False, True]] | None=None, context_menu: Var[str] | str | None=None, dir: Var[str] | str | None=None, draggable: Var[bool] | bool | None=None, enter_key_hint: Literal['done', 'enter', 'go', 'next', 'previous', 'search', 'send'] | Var[Literal['done', 'enter', 'go', 'next', 'previous', 'search', 'send']] | None=None, hidden: Var[bool] | bool | None=None, input_mode: Literal['decimal', 'email', 'none', 'numeric', 'search', 'tel', 'text', 'url'] | Var[Literal['decimal', 'email', 'none', 'numeric', 'search', 'tel', 'text', 'url']] | None=None, item_prop: Var[str] | str | None=None, lang: Var[str] | str | None=None, role: Literal['alert', 'alertdialog', 'application', 'article', 'banner', 'button', 'cell', 'checkbox', 'columnheader', 'combobox', 'complementary', 'contentinfo', 'definition', 'dialog', 'directory', 'document', 'feed', 'figure', 'form', 'grid', 'gridcell', 'group', 'heading', 'img', 'link', 'list', 'listbox', 'listitem', 'log', 'main', 'marquee', 'math', 'menu', 'menubar', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'navigation', 'none', 'note', 'option', 'presentation', 'progressbar', 'radio', 'radiogroup', 'region', 'row', 'rowgroup', 'rowheader', 'scrollbar', 'search', 'searchbox', 'separator', 'slider', 'spinbutton', 'status', 'switch', 'tab', 'table', 'tablist', 'tabpanel', 'term', 'textbox', 'timer', 'toolbar', 'tooltip', 'tree', 'treegrid', 'treeitem'] | Var[Literal['alert', 'alertdialog', 'application', 'article', 'banner', 'button', 'cell', 'checkbox', 'columnheader', 'combobox', 'complementary', 'contentinfo', 'definition', 'dialog', 'directory', 'document', 'feed', 'figure', 'form', 'grid', 'gridcell', 'group', 'heading', 'img', 'link', 'list', 'listbox', 'listitem', 'log', 'main', 'marquee', 'math', 'menu', 'menubar', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'navigation', 'none', 'note', 'option', 'presentation', 'progressbar', 'radio', 'radiogroup', 'region', 'row', 'rowgroup', 'rowheader', 'scrollbar', 'search', 'searchbox', 'separator', 'slider', 'spinbutton', 'status', 'switch', 'tab', 'table', 'tablist', 'tabpanel', 'term', 'textbox', 'timer', 'toolbar', 'tooltip', 'tree', 'treegrid', 'treeitem']] | None=None, slot: Var[str] | str | None=None, spell_check: Var[bool] | bool | None=None, tab_index: Var[int] | int | None=None, title: Var[str] | str | None=None, style: Sequence[Mapping[str, Any]] | Mapping[str, Any] | Var[Mapping[str, Any]] | Breakpoints | None=None, key: Any | None=None, id: Any | None=None, ref: Var | None=None, class_name: Any | None=None, custom_attrs: dict[str, Var | Any] | None=None, on_blur: Optional[EventType[()]]=None, on_click: Optional[EventType[()] | EventType[PointerEventInfo]]=None, on_context_menu: Optional[EventType[()] | EventType[PointerEventInfo]]=None, on_double_click: Optional[EventType[()] | EventType[PointerEventInfo]]=None, on_focus: Optional[EventType[()]]=None, on_mount: Optional[EventType[()]]=None, on_mouse_down: Optional[EventType[()]]=None, on_mouse_enter: Optional[EventType[()]]=None, on_mouse_leave: Optional[EventType[()]]=None, on_mouse_move: Optional[EventType[()]]=None, on_mouse_out: Optional[EventType[()]]=None, on_mouse_over: Optional[EventType[()]]=None, on_mouse_up: Optional[EventType[()]]=None, on_scroll: Optional[EventType[()]]=None, on_scroll_end: Optional[EventType[()]]=None, on_unmount: Optional[EventType[()]]=None, **props) -> 'Link':
        """Create the link component."""
        ...

    @staticmethod
    def validate_variant(variant: LiteralLinkVariant):
        ...

    @staticmethod
    def validate_size(size: LiteralLinkSize):
        ...
link = Link.create